{"version":3,"sources":["webpack:///./src/app/users/image-picker/image-picker.component.html","webpack:///./src/app/users/image-picker/image-picker.component.scss","webpack:///./src/app/users/image-picker/image-picker.component.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.page.html","webpack:///./src/app/users/users.page.scss","webpack:///./src/app/users/users.page.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["module.exports = \"<div class=\\\"picker\\\">\\n  <ion-img\\n    role=\\\"button\\\"\\n    class=\\\"image\\\"\\n    (click)=\\\"onPickImage()\\\"\\n    [src]=\\\"selectedImage\\\"\\n    *ngIf=\\\"selectedImage\\\"\\n  ></ion-img>\\n  <ion-button color=\\\"primary\\\" (click)=\\\"onPickImage()\\\" *ngIf=\\\"!selectedImage\\\">\\n    <ion-icon name=\\\"camera\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>Take Picture</ion-label>\\n  </ion-button>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2ltYWdlLXBpY2tlci9pbWFnZS1waWNrZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Plugins, Capacitor, CameraSource, CameraResultType } from '@capacitor/core';\n\n\n@Component({\n  selector: 'app-image-picker',\n  templateUrl: './image-picker.component.html',\n  styleUrls: ['./image-picker.component.scss'],\n})\nexport class ImagePickerComponent implements OnInit {\n  @Output() imagePick = new EventEmitter<string>();\n  selectedImage: string;\n  isAvailable: boolean;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  onPickImage() {\n    if (!Capacitor.isPluginAvailable('Camera')) {\n      this.isAvailable = false;\n      return;\n    }\n    Plugins.Camera.getPhoto({\n      quality: 50,\n      source: CameraSource.Camera,\n      correctOrientation: true,\n      height: 320,\n      width: 200,\n      resultType: CameraResultType.Base64\n    }).then(image => {\n      this.selectedImage = image.base64String;\n      this.imagePick.emit(image.base64String);\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsersPage } from './users.page';\nimport { ImagePickerComponent } from './image-picker/image-picker.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UsersPage, ImagePickerComponent],\n  exports: [ImagePickerComponent],\n  entryComponents: [ImagePickerComponent]\n})\nexport class UsersPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"m1\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Add a New User</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">ID (without opening 0)</ion-label>\\n              <ion-input\\n                type=\\\"string\\\"\\n                ngModel\\n                name=\\\"uid\\\"\\n                required\\n                #uidCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"!uidCtrl.valid && uidCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label>\\n                Should be at least 8 characters long.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Name</ion-label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                ngModel\\n                name=\\\"name\\\"\\n                required\\n                minlength=\\\"2\\\"\\n                #nameCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"!nameCtrl.valid && nameCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label>\\n                Should be at least 2 characters long.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Type</ion-label>\\n              <ion-select\\n                placeholder=\\\"Select Type\\\"\\n                interface=\\\"popover\\\"\\n                ngModel\\n                name=\\\"type\\\"\\n                required\\n                #typeCtrl=\\\"ngModel\\\"\\n              >\\n                <ion-select-option value=\\\"p\\\">Patient</ion-select-option>\\n                <ion-select-option value=\\\"n\\\">Nurse</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"!typeCtrl.valid && typeCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label>\\n                You must choose a user type.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"typeCtrl.value == 'p'\\\">\\n              <ion-label position=\\\"floating\\\">Room Number</ion-label>\\n              <ion-select\\n                placeholder=\\\"Select Room Number\\\"\\n                interface=\\\"popover\\\"\\n                ngModel\\n                name=\\\"room\\\"\\n                required\\n                #roomCtrl=\\\"ngModel\\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let room of roomsList\\\"\\n                  value=\\\"{{ room.roomNum }}\\\"\\n                  >{{ room.roomNum }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <div text-center>\\n            <ion-button\\n              type=\\\"submit\\\"\\n              color=\\\"primary\\\"\\n              expand=\\\"block\\\"\\n              [disabled]=\\\"!f.valid\\\"\\n            >\\n              Create\\n            </ion-button>\\n            <p text-center>OR</p>\\n            <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\n              <ion-icon name=\\\"camera\\\"></ion-icon>\\n              Take a Picture of the Patient Sticker\\n            </ion-button>\\n          </div>\\n        </ion-col>\\n        <ion-col size-sm=\\\"3\\\" offset-sm=\\\"3\\\">\\n          <app-image-picker\\n            (imagePick)=\\\"onImagePicked($event)\\\"\\n          ></app-image-picker>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService, AuthResponseData } from '../auth/auth.service';\nimport { Router } from '@angular/router';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { Observable, Subscription } from 'rxjs';\nimport { UsersService } from './users.service';\nimport { Users } from './users.model';\nimport { Room } from './room.model';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss']\n})\nexport class UsersPage implements OnInit, OnDestroy {\n  isLoading = false;\n  usersSub: Subscription;\n  usersList: Users[];\n  roomsList: Room[];\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    private usersService: UsersService\n  ) {}\n\n  ngOnInit() {\n    this.usersSub = this.usersService.getUsers().subscribe(users => {\n      this.usersList = users;\n    });\n    this.usersService.getRooms().subscribe(rooms => {\n      this.roomsList = rooms;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.usersSub) {\n      this.usersSub.unsubscribe();\n    }\n  }\n\n  ionViewWillEnter() {\n    this.isLoading = true;\n    this.usersService.fetchUsers().subscribe(() => {\n      this.isLoading = false;\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const uid = form.value.uid + '@test.com';\n    const password = form.value.uid;\n    const name = form.value.name;\n    const type = form.value.type;\n    const room = form.value.room ? form.value.room : '0';\n    this.createUser(uid, password, name, type, room);\n    form.reset();\n  }\n\n  createUser(\n    uid: string,\n    password: string,\n    name: string,\n    type: string,\n    room: string\n  ) {\n    let localId: string;\n    this.isLoading = true;\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'Creating User...' })\n      .then(loadingEl => {\n        loadingEl.present();\n        let authObs: Observable<AuthResponseData>;\n        authObs = this.authService.signup(uid, password);\n        authObs.subscribe(\n          resData => {\n            localId = resData.localId;\n            this.isLoading = false;\n            loadingEl.dismiss();\n            const newAddedUser = new Users(uid, name, type, room, localId);\n            this.usersService.add(newAddedUser);\n            this.router.navigateByUrl('/requests/tabs/my-requests');\n          },\n          errRes => {\n            loadingEl.dismiss();\n            const code = errRes.error.error.message;\n            let message = 'Could not add user, please try again.';\n            if (code === 'EMAIL_EXISTS') {\n              message = 'This Id exists already!';\n            }\n            this.showAlert(message);\n          }\n        );\n      });\n  }\n\n  private showAlert(message: string) {\n    this.alertCtrl\n      .create({\n        header: 'User creation failed',\n        message: message,\n        buttons: ['Okay']\n      })\n      .then(alertEl => alertEl.present());\n  }\n\n  onImagePicked(imageData: string) {\n    \n  }\n}\n"],"sourceRoot":""}